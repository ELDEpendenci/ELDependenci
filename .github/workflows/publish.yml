# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
env:
  version: 0.0.7.1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

name: Publish WorkFlows for ELDependenci

on:
  push:
    branches: [ master, test-workflows ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source Code
      id: checkout-source
      uses: actions/checkout@v2
    - name: Set up JDK 11
      id: setup-java
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build and Sign artifacts with Maven
      run: mvn -B verify --file pom.xml -D.gpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
    - name: Delete tag and release
      id: delete-tag-release
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      with:
        tag_name: ${{ env.version }}
        delete_release: true
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.version }}
        release_name: Release ${{ github.repository }}-${{ env.version }}
        body: 更新詳細請查看 [版本更新](https://eric2788.gitbook.io/eldependenci/references/version-update/v0.0.7)
        draft: false
        prerelease: false
    - name: Upload Release jar
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./ELDependenci-plugin/target/ELDependenci-plugin-${{env.version}}.jar
        asset_name: ELDependenci-plugin-${{ env.version }}.jar
    - name: Upload Release jar asc
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./ELDependenci-plugin/target/ELDependenci-plugin-${{env.version}}.jar.asc
        asset_name: ELDependenci-plugin-${{ env.version }}.jar.asc
    - name: 'Update javadocs'
      id: update-javadoc
      uses: eric2788/push-javadoc-branch@main
      with:
        use-maven: true
        javadocs: "javadocs"
