env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

name: Publish WorkFlows for ELDependenci

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source Code
      id: checkout-source
      uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '18'
        distribution: 'adopt'
    - run: mvn --batch-mode clean package
      name: build plugins
    - run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
      id: project

    - name: Delete existing release and tag
      id: delete-tag-release
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      with:
        tag_name: ${{ steps.project.outputs.version }}
        delete_release: true

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.project.outputs.version }}
        release_name: Release ${{ github.repository }} v${{ steps.project.outputs.version }}
        body: 請到 [wiki](https://eric2788.gitbook.io/eldependenci/references/version-update) 查看更新內容
    - name: zip plugins
      run: zip -r plugins.zip outputs

    - name: Upload Release jar
      id: upload-release-asset-jar
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./plugins.zip
        asset_name: plugins.zip
        asset_content_type: application/zip

    - name: 'Update javadocs'
      id: update-javadoc
      uses: eric2788/push-javadoc-branch@main
      with:
        use-maven: true
        javadocs: "javadocs"

  upload_github_pkg:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: latest-tag
      - uses: jungwinter/split@v2
        id: version
        with:
         msg: ${{ steps.latest-tag.outputs.tag }}
         separator: '.'
      - uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'adopt'
      - name: Publish package
        run: mvn --batch-mode deploy
        if: ${{ steps.version.outputs.length == 3 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
